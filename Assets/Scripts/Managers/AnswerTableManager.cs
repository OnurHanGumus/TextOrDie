// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class AnswerTableManager
{
	public class Row
	{
		public string question_id;
		public string id;
		public string answer;

	}

	private List<Row> _rowList = new List<Row>();
	private bool _isLoaded = false;

	public bool IsLoaded()
	{
		return _isLoaded;
	}

	public List<Row> GetRowList()
	{
		return _rowList;
	}

	public void Load(TextAsset csv)
	{
		_rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for (int i = 1; i < grid.Length; i++)
		{
			Row row = new Row();
			row.question_id = grid[i][0];
			row.id = grid[i][1];
			row.answer = grid[i][2];

			_rowList.Add(row);
		}
		_isLoaded = true;
	}

	public int NumRows()
	{
		return _rowList.Count;
	}

	public Row GetAt(int i)
	{
		if (_rowList.Count <= i)
			return null;
		return _rowList[i];
	}

	public Row Find_question_id(string find)
	{
		return _rowList.Find(x => x.question_id == find);
	}
	public List<Row> FindAll_question_id(string find)
	{
		return _rowList.FindAll(x => x.question_id == find);
	}
	public Row Find_id(string find)
	{
		return _rowList.Find(x => x.id == find);
	}
	public List<Row> FindAll_id(string find)
	{
		return _rowList.FindAll(x => x.id == find);
	}
	public Row Find_answer(string find)
	{
		return _rowList.Find(x => x.answer == find);
	}
	public List<Row> FindAll_answer(string find)
	{
		return _rowList.FindAll(x => x.answer == find);
	}

}